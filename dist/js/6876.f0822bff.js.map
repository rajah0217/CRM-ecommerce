{"version":3,"file":"js/6876.f0822bff.js","mappings":"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","sources":["webpack://minible/./src/views/pages/charts/chartjs/index.vue","webpack://minible/./src/views/pages/charts/chartjs/components/LineChart.vue","webpack://minible/./node_modules/@kurkle/color/dist/color.esm.js","webpack://minible/./node_modules/chart.js/dist/chunks/helpers.segment.js","webpack://minible/./node_modules/chart.js/dist/chart.js","webpack://minible/./node_modules/vue-chartjs/dist/index.js","webpack://minible/./src/views/pages/charts/chartjs/components/LineChart.vue?6892","webpack://minible/./src/views/pages/charts/chartjs/components/BarChart.vue","webpack://minible/./src/views/pages/charts/chartjs/components/BarChart.vue?0049","webpack://minible/./src/views/pages/charts/chartjs/components/PieChart.vue","webpack://minible/./src/views/pages/charts/chartjs/components/PieChart.vue?aab8","webpack://minible/./src/views/pages/charts/chartjs/components/DonutChart.vue","webpack://minible/./src/views/pages/charts/chartjs/components/DonutChart.vue?f459","webpack://minible/./src/views/pages/charts/chartjs/components/PolarChart.vue","webpack://minible/./src/views/pages/charts/chartjs/components/PolarChart.vue?3086","webpack://minible/./src/views/pages/charts/chartjs/components/RadarChart.vue","webpack://minible/./src/views/pages/charts/chartjs/components/RadarChart.vue?f5f5","webpack://minible/./src/views/pages/charts/chartjs/index.vue?4b43"],"sourcesContent":["<script>\nimport Layout from \"../../../layouts/main\";\nimport PageHeader from \"@/components/page-header\";\n\nimport LineChart from \"./components/LineChart.vue\";\nimport BarChart from \"./components/BarChart.vue\";\nimport PieChart from \"./components/PieChart.vue\";\nimport DonutChart from \"./components/DonutChart.vue\";\nimport PolarChart from \"./components/PolarChart.vue\";\nimport RadarChart from \"./components/RadarChart.vue\";\n\n/**\n * Chartjs-chart component\n */\nexport default {\n  data() {\n    return {\n      title: \"ChartJs\",\n      items: [\n        {\n          text: \"Charts\",\n          href: \"/\",\n        },\n        {\n          text: \"ChartJs\",\n          active: true,\n        },\n      ],\n    }\n  },\n  components: {\n    Layout,\n    PageHeader,\n    LineChart,\n    BarChart,\n    PieChart,\n    DonutChart,\n    PolarChart,\n    RadarChart\n  }\n};\n</script>\n\n<template>\n  <Layout>\n    <PageHeader :title=\"title\" :items=\"items\" />\n  <div>\n    <BRow>\n      <BCol lg=\"6\">\n        <BCard no-body>\n          <BCardBody>\n            <BCardTitle class=\"mb-4\">Line Chart</BCardTitle>\n            <LineChart />\n          </BCardBody>\n        </BCard>\n      </BCol>\n      <BCol lg=\"6\">\n        <BCard no-body>\n          <BCardBody>\n            <BCardTitle class=\"mb-4\">Bar Chart</BCardTitle>\n            <BarChart />\n          </BCardBody>\n        </BCard>\n      </BCol>\n    </BRow>\n\n    <BRow>\n      <BCol lg=\"6\">\n        <BCard no-body>\n          <BCardBody>\n            <BCardTitle class=\"mb-4\">Pie Chart</BCardTitle>\n            <div class=\"d-flex justify-content-center\">\n              <PieChart />\n            </div>\n          </BCardBody>\n        </BCard>\n      </BCol>\n      <BCol lg=\"6\">\n        <BCard no-body>\n          <BCardBody>\n            <BCardTitle class=\"mb-4\">Donut Chart</BCardTitle>\n            <div class=\"d-flex justify-content-center\">\n              <DonutChart />\n            </div>\n          </BCardBody>\n        </BCard>\n      </BCol>\n    </BRow>\n\n    <BRow>\n      <BCol lg=\"6\">\n        <BCard no-body>\n          <BCardBody>\n            <BCardTitle class=\"mb-4\">Polar area Chart</BCardTitle>\n            <div class=\"d-flex justify-content-center\">\n              <PolarChart />\n            </div>\n          </BCardBody>\n        </BCard>\n      </BCol>\n      <BCol lg=\"6\">\n        <BCard no-body>\n          <BCardBody>\n            <BCardTitle class=\"mb-4\">Radar Chart</BCardTitle>\n            <div class=\"d-flex justify-content-center\">\n              <RadarChart />\n            </div>\n          </BCardBody>\n        </BCard>\n      </BCol>\n    </BRow>\n  </div>\n  </Layout>\n</template>\n\n<style lang=\"scss\">\n.chart-wrapper {\n  height: 300px !important;\n  width: 100% !important;\n}\n</style>\n","<script>\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  Filler\n} from \"chart.js\";\nimport { Line } from \"vue-chartjs\";\n\nChartJS.register(\n  CategoryScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  Filler\n);\n\nexport default {\n  components: {\n    Line\n  },\n\n  data() {\n    return {\n      data: {\n        labels: [\n          \"January\",\n          \"February\",\n          \"March\",\n          \"April\",\n          \"May\",\n          \"June\",\n          \"July\",\n          \"August\",\n          \"September\",\n          \"October\"\n        ],\n        datasets: [\n          {\n            label: \"Sales Analytics\",\n            fill: true,\n            lineTension: 0.5,\n            backgroundColor: \"#5b73e81a\",\n            borderColor: \"#5b73e8\",\n            borderCapStyle: \"butt\",\n            borderJoinStyle: \"miter\",\n            pointBorderColor: \"#5b73e8\",\n            pointBackgroundColor: \"#fff\",\n            pointBorderWidth: 1,\n            pointHoverRadius: 5,\n            pointHoverBackgroundColor: \"#5b73e8\",\n            pointHoverBorderColor: \"#fff\",\n            pointHoverBorderWidth: 2,\n            pointRadius: 1,\n            pointHitRadius: 10,\n            data: [65, 59, 80, 81, 56, 55, 40, 55, 30, 80]\n          },\n          {\n            label: \"Monthly Earnings\",\n            fill: false,\n            lineTension: 0.5,\n            backgroundColor: \"rgba(235, 239, 242)\",\n            borderColor: \"#ebeff2\",\n            borderCapStyle: \"butt\",\n            borderDashOffset: 0.0,\n            borderJoinStyle: \"miter\",\n            pointRadius: 1,\n            pointHitRadius: 10,\n            data: [80, 23, 56, 65, 23, 35, 85, 25, 92, 36]\n          }\n        ]\n      },\n      options: {\n        responsive: true,\n        interaction: {\n          mode: \"index\",\n          intersect: false\n        },\n        stacked: false,\n\n        scales: {\n          y: {\n            type: \"linear\",\n            display: true,\n            position: \"left\"\n          }\n        }\n      }\n    };\n  }\n};\n</script>\n\n<template>\n  <Line :data=\"data\" :options=\"options\" class=\"chart-wrapper\" />\n</template>\n","/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.4.0\n * https://www.chartjs.org\n * (c) 2023 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\nfunction isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , _parsed  } = meta;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = _limitValue(Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            count = _limitValue(Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1), start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n        clip: true,\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop)) {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */ /**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        window.addEventListener('test', null, options);\n        window.removeEventListener('test', null, options);\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, fontString as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, overrideTextDirection as aA, _textX as aB, restoreTextDirection as aC, drawPointLegend as aD, distanceBetweenPoints as aE, noop as aF, _setMinAndMaxByKey as aG, niceNum as aH, almostWhole as aI, almostEquals as aJ, _decimalPlaces as aK, Ticks as aL, log10 as aM, _longestText as aN, _filterBetween as aO, _lookup as aP, isPatternOrGradient as aQ, getHoverColor as aR, clone as aS, _merger as aT, _mergerIf as aU, _deprecated as aV, _splitKey as aW, toFontString as aX, splineCurve as aY, splineCurveMonotone as aZ, getStyle as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, _elementsEqual as ah, _isClickEvent as ai, _isBetween as aj, _readValueToProps as ak, _updateBezierControlPoints as al, _computeSegments as am, _boundSegments as an, _steppedInterpolation as ao, _bezierInterpolation as ap, _pointInLine as aq, _steppedLineTo as ar, _bezierCurveTo as as, drawPoint as at, addRoundedRectPath as au, toTRBL as av, toTRBLCorners as aw, _boundSegment as ax, _normalizeAngle as ay, getRtlAdapter as az, isArray as b, toLineHeight as b0, PITAU as b1, INFINITY as b2, RAD_PER_DEG as b3, QUARTER_PI as b4, TWO_THIRDS_PI as b5, _angleDiff as b6, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.segment.js.map\n","/*!\n * Chart.js v4.4.0\n * https://www.chartjs.org\n * (c) 2023 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data) {\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            x: key,\n            y: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            this._data = convertObjectDataToArray(data);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const skipNull = (meta)=>{\n            const parsed = meta.controller.getParsed(dataIndex);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            return lookupMethod(data, axis, value);\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).reduce((acc, key)=>acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.4.0\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resize(width, height);\n            this._resizeBeforeDraw = null;\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta, this.chartArea);\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements))) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let x = 0;\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                x += pos.x;\n                y += pos.y;\n                ++count;\n            }\n        }\n        return {\n            x: x / count,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value,  parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","import { version, isProxy, toRaw, defineComponent, ref, shallowRef, onMounted, onBeforeUnmount, watch, h } from 'vue';\nimport { Chart as Chart$1, BarController, DoughnutController, LineController, PieController, PolarAreaController, RadarController, BubbleController, ScatterController } from 'chart.js';\n\nconst CommonProps = {\n    data: {\n        type: Object,\n        required: true\n    },\n    options: {\n        type: Object,\n        default: ()=>({})\n    },\n    plugins: {\n        type: Array,\n        default: ()=>[]\n    },\n    datasetIdKey: {\n        type: String,\n        default: \"label\"\n    },\n    updateMode: {\n        type: String,\n        default: undefined\n    }\n};\nconst Props = {\n    type: {\n        type: String,\n        required: true\n    },\n    ...CommonProps\n};\n\nconst compatProps = version[0] === \"2\" ? (internals, props)=>Object.assign(internals, {\n        attrs: props\n    }) : (internals, props)=>Object.assign(internals, props);\nfunction toRawIfProxy(obj) {\n    return isProxy(obj) ? toRaw(obj) : obj;\n}\nfunction cloneProxy(obj) {\n    let src = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : obj;\n    return isProxy(src) ? new Proxy(obj, {}) : obj;\n}\nfunction setOptions(chart, nextOptions) {\n    const options = chart.options;\n    if (options && nextOptions) {\n        Object.assign(options, nextOptions);\n    }\n}\nfunction setLabels(currentData, nextLabels) {\n    currentData.labels = nextLabels;\n}\nfunction setDatasets(currentData, nextDatasets, datasetIdKey) {\n    const addedDatasets = [];\n    currentData.datasets = nextDatasets.map((nextDataset)=>{\n        // given the new set, find it's current match\n        const currentDataset = currentData.datasets.find((dataset)=>dataset[datasetIdKey] === nextDataset[datasetIdKey]);\n        // There is no original to update, so simply add new one\n        if (!currentDataset || !nextDataset.data || addedDatasets.includes(currentDataset)) {\n            return {\n                ...nextDataset\n            };\n        }\n        addedDatasets.push(currentDataset);\n        Object.assign(currentDataset, nextDataset);\n        return currentDataset;\n    });\n}\nfunction cloneData(data, datasetIdKey) {\n    const nextData = {\n        labels: [],\n        datasets: []\n    };\n    setLabels(nextData, data.labels);\n    setDatasets(nextData, data.datasets, datasetIdKey);\n    return nextData;\n}\n/**\n * Get dataset from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getDatasetAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event, \"dataset\", {\n        intersect: true\n    }, false);\n}\n/**\n * Get single dataset element from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getElementAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event, \"nearest\", {\n        intersect: true\n    }, false);\n}\n/**\n * Get all dataset elements from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getElementsAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event, \"index\", {\n        intersect: true\n    }, false);\n}\n\nconst Chart = defineComponent({\n    props: Props,\n    setup (props, param) {\n        let { expose  } = param;\n        const canvasRef = ref(null);\n        const chartRef = shallowRef(null);\n        expose({\n            chart: chartRef\n        });\n        const renderChart = ()=>{\n            if (!canvasRef.value) return;\n            const { type , data , options , plugins , datasetIdKey  } = props;\n            const clonedData = cloneData(data, datasetIdKey);\n            const proxiedData = cloneProxy(clonedData, data);\n            chartRef.value = new Chart$1(canvasRef.value, {\n                type,\n                data: proxiedData,\n                options: {\n                    ...options\n                },\n                plugins\n            });\n        };\n        const destroyChart = ()=>{\n            const chart = toRaw(chartRef.value);\n            if (chart) {\n                chart.destroy();\n                chartRef.value = null;\n            }\n        };\n        const update = (chart)=>{\n            chart.update(props.updateMode);\n        };\n        onMounted(renderChart);\n        onBeforeUnmount(destroyChart);\n        watch([\n            ()=>props.options,\n            ()=>props.data\n        ], (param, param1)=>{\n            let [nextOptionsProxy, nextDataProxy] = param, [prevOptionsProxy, prevDataProxy] = param1;\n            const chart = toRaw(chartRef.value);\n            if (!chart) {\n                return;\n            }\n            let shouldUpdate = false;\n            if (nextOptionsProxy) {\n                const nextOptions = toRawIfProxy(nextOptionsProxy);\n                const prevOptions = toRawIfProxy(prevOptionsProxy);\n                if (nextOptions && nextOptions !== prevOptions) {\n                    setOptions(chart, nextOptions);\n                    shouldUpdate = true;\n                }\n            }\n            if (nextDataProxy) {\n                const nextLabels = toRawIfProxy(nextDataProxy.labels);\n                const prevLabels = toRawIfProxy(prevDataProxy.labels);\n                const nextDatasets = toRawIfProxy(nextDataProxy.datasets);\n                const prevDatasets = toRawIfProxy(prevDataProxy.datasets);\n                if (nextLabels !== prevLabels) {\n                    setLabels(chart.config.data, nextLabels);\n                    shouldUpdate = true;\n                }\n                if (nextDatasets && nextDatasets !== prevDatasets) {\n                    setDatasets(chart.config.data, nextDatasets, props.datasetIdKey);\n                    shouldUpdate = true;\n                }\n            }\n            if (shouldUpdate) {\n                update(chart);\n            }\n        }, {\n            deep: true\n        });\n        return ()=>{\n            return h(\"canvas\", {\n                ref: canvasRef\n            });\n        };\n    }\n});\n\nfunction createTypedChart(type, registerables) {\n    Chart$1.register(registerables);\n    return defineComponent({\n        props: CommonProps,\n        setup (props, param) {\n            let { expose  } = param;\n            const ref = shallowRef(null);\n            const reforwardRef = (chartRef)=>{\n                ref.value = chartRef?.chart;\n            };\n            expose({\n                chart: ref\n            });\n            return ()=>{\n                return h(Chart, compatProps({\n                    ref: reforwardRef\n                }, {\n                    type,\n                    ...props\n                }));\n            };\n        }\n    });\n}\nconst Bar = /* #__PURE__ */ createTypedChart(\"bar\", BarController);\nconst Doughnut = /* #__PURE__ */ createTypedChart(\"doughnut\", DoughnutController);\nconst Line = /* #__PURE__ */ createTypedChart(\"line\", LineController);\nconst Pie = /* #__PURE__ */ createTypedChart(\"pie\", PieController);\nconst PolarArea = /* #__PURE__ */ createTypedChart(\"polarArea\", PolarAreaController);\nconst Radar = /* #__PURE__ */ createTypedChart(\"radar\", RadarController);\nconst Bubble = /* #__PURE__ */ createTypedChart(\"bubble\", BubbleController);\nconst Scatter = /* #__PURE__ */ createTypedChart(\"scatter\", ScatterController);\n\nexport { Bar, Bubble, Chart, Doughnut, Line, Pie, PolarArea, Radar, Scatter, createTypedChart, getDatasetAtEvent, getElementAtEvent, getElementsAtEvent };\n//# sourceMappingURL=index.js.map\n","import { render } from \"./LineChart.vue?vue&type=template&id=7f4a4cda\"\nimport script from \"./LineChart.vue?vue&type=script&lang=js\"\nexport * from \"./LineChart.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<script>\nimport {\n  Chart as ChartJS,\n  Title,\n  Tooltip,\n  Legend,\n  BarElement,\n  CategoryScale,\n  LinearScale\n} from \"chart.js\";\nimport { Bar } from \"vue-chartjs\";\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nexport default {\n  name: \"App\",\n  components: {\n    Bar\n  },\n  data() {\n    return {\n      data: {\n        labels: [\n          \"January\",\n          \"February\",\n          \"March\",\n          \"April\",\n          \"May\",\n          \"June\",\n          \"July\"\n        ],\n        datasets: [\n          {\n            barPercentage: 0.4,\n            label: \"Sales Analytics\",\n            backgroundColor: \"rgba(52, 195, 143, 0.8)\",\n            borderColor: \"rgba(52, 195, 143, 0.8)\",\n            borderWidth: 1,\n            hoverBackgroundColor: \"rgba(52, 195, 143, 0.9)\",\n            hoverBorderColor: \"rgba(52, 195, 143, 0.9)\",\n            data: [65, 59, 81, 45, 56, 80, 50, 20]\n          }\n        ]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: true\n      }\n    };\n  }\n};\n</script>\n<template>\n  <Bar :data=\"data\" :options=\"options\" class=\"chart-wrapper\" />\n</template>\n","import { render } from \"./BarChart.vue?vue&type=template&id=45dbd4b6\"\nimport script from \"./BarChart.vue?vue&type=script&lang=js\"\nexport * from \"./BarChart.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<script>\nimport {\n  Chart as ChartJS,\n  Title,\n  Tooltip,\n  Legend,\n  CategoryScale,\n  ArcElement\n} from \"chart.js\";\nimport { Pie } from \"vue-chartjs\";\n\nChartJS.register(\n  CategoryScale,\n\n  Title,\n  Tooltip,\n  Legend,\n  ArcElement\n);\n\nexport default {\n  name: \"App\",\n  components: {\n    Pie\n  },\n  data() {\n    return {\n      data: {\n        labels: [\"Desktops\", \"Tablets\"],\n        datasets: [\n          {\n            data: [300, 180],\n            backgroundColor: [\"#34c38f\", \"#ebeff2\"],\n            hoverBackgroundColor: [\"#34c38f\", \"#ebeff2\"],\n            hoverBorderColor: \"#fff\"\n          }\n        ]\n      },\n      options: {\n        maintainAspectRatio: true,\n        responsive: true\n      }\n    };\n  }\n};\n</script>\n<template>\n  <Pie :data=\"data\" :options=\"options\" class=\"pie-chart-wrapper\" />\n</template>\n\n<style lang=\"scss\">\n.pie-chart-wrapper {\n  height: 265px !important;\n}\n</style>\n","import { render } from \"./PieChart.vue?vue&type=template&id=511428d0\"\nimport script from \"./PieChart.vue?vue&type=script&lang=js\"\nexport * from \"./PieChart.vue?vue&type=script&lang=js\"\n\nimport \"./PieChart.vue?vue&type=style&index=0&id=511428d0&lang=scss\"\n\nimport exportComponent from \"../../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<script>\nimport {\n  Chart as ChartJS,\n  Title,\n  Tooltip,\n  Legend,\n  CategoryScale,\n  ArcElement\n} from \"chart.js\";\nimport { Doughnut } from \"vue-chartjs\";\n\nChartJS.register(\n  CategoryScale,\n\n  Title,\n  Tooltip,\n  Legend,\n  ArcElement\n);\n\nexport default {\n  name: \"App\",\n  components: {\n    Doughnut\n  },\n  data() {\n    return {\n      data: {\n        labels: [\"Desktops\", \"Tablets\"],\n        datasets: [\n          {\n            data: [300, 210],\n            backgroundColor: [\"#5b73e8\", \"#ebeff2\"],\n            hoverBackgroundColor: [\"#5b73e8\", \"#ebeff2\"],\n            hoverBorderColor: \"#fff\",\n            borderWidth: 0,\n            radius: \"90%\",\n            innerRadius: \"75%\"\n          }\n        ]\n      },\n      options: {\n        maintainAspectRatio: true,\n        responsive: true\n      }\n    };\n  }\n};\n</script>\n<template>\n  <Doughnut :data=\"data\" :options=\"options\" class=\"donut-chart-wrapper\" />\n</template>\n\n<style lang=\"scss\">\n.donut-chart-wrapper {\n  height: 265px !important;\n}\n</style>\n","import { render } from \"./DonutChart.vue?vue&type=template&id=3ba0e62f\"\nimport script from \"./DonutChart.vue?vue&type=script&lang=js\"\nexport * from \"./DonutChart.vue?vue&type=script&lang=js\"\n\nimport \"./DonutChart.vue?vue&type=style&index=0&id=3ba0e62f&lang=scss\"\n\nimport exportComponent from \"../../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<script>\nimport {\n  Chart as ChartJS,\n  Title,\n  Tooltip,\n  Legend,\n  CategoryScale,\n  RadialLinearScale\n} from \"chart.js\";\nimport { PolarArea } from \"vue-chartjs\";\n\nChartJS.register(CategoryScale, Title, Tooltip, Legend, RadialLinearScale);\n\nexport default {\n  name: \"App\",\n  components: {\n    PolarArea\n  },\n  data() {\n    return {\n      data: {\n        labels: [\"Series 1\", \"Series 2\", \"Series 3\", \"Series 4\"],\n        datasets: [\n          {\n            data: [11, 16, 7, 18],\n            backgroundColor: [\"#50a5f1\", \"#34c38f\", \"#f1b44c\", \"#5b73e8\"],\n            label: \"My dataset\", // for legend\n            hoverBorderColor: \"#fff\"\n          }\n        ]\n      },\n      options: {\n        maintainAspectRatio: true,\n        responsive: true\n      }\n    };\n  }\n};\n</script>\n<template>\n  <PolarArea :data=\"data\" :options=\"options\" class=\"polar-chart-wrapper\" />\n</template>\n\n<style lang=\"scss\">\n.polar-chart-wrapper {\n  height: 300px !important;\n}\n</style>\n","import { render } from \"./PolarChart.vue?vue&type=template&id=3606e9f0\"\nimport script from \"./PolarChart.vue?vue&type=script&lang=js\"\nexport * from \"./PolarChart.vue?vue&type=script&lang=js\"\n\nimport \"./PolarChart.vue?vue&type=style&index=0&id=3606e9f0&lang=scss\"\n\nimport exportComponent from \"../../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<script>\nimport {\n  Chart as ChartJS,\n  Title,\n  Tooltip,\n  Legend,\n  CategoryScale,\n  RadialLinearScale\n} from \"chart.js\";\nimport { Radar } from \"vue-chartjs\";\n\nChartJS.register(CategoryScale, Title, Tooltip, Legend, RadialLinearScale);\n\nexport default {\n  name: \"App\",\n  components: {\n    Radar\n  },\n  data() {\n    return {\n      data: {\n        labels: [\"Series 1\", \"Series 2\", \"Series 3\", \"Series 4\"],\n        datasets: [\n          {\n            label: \"Desktops\",\n            backgroundColor: \"rgba(241, 180, 76 , 0.2)\",\n            borderColor: \"#f1b44c\",\n            pointBackgroundColor: \"#f1b44c\",\n            pointBorderColor: \"#fff\",\n            pointHoverBackgroundColor: \"#fff\",\n            pointHoverBorderColor: \"#f1b44c\",\n            data: [65, 59, 90, 81, 56, 55, 40]\n          },\n          {\n            label: \"Tablets\",\n            backgroundColor: \"rgba(91, 140, 232, 0.2)\",\n            borderColor: \"#5b73e8\",\n            pointBackgroundColor: \"#5b73e8\",\n            pointBorderColor: \"#fff\",\n            pointHoverBackgroundColor: \"#fff\",\n            pointHoverBorderColor: \"#5b73e8\",\n            data: [28, 48, 40, 19, 96, 27, 100]\n          }\n        ]\n      },\n      options: {\n        maintainAspectRatio: true,\n        responsive: true\n      }\n    };\n  }\n};\n</script>\n<template>\n  <Radar :data=\"data\" :options=\"options\" class=\"donut-chart-wrapper\" />\n</template>\n\n<style lang=\"scss\">\n.donut-chart-wrapper {\n  height: 300px !important;\n}\n</style>\n","import { render } from \"./RadarChart.vue?vue&type=template&id=073bb9ca\"\nimport script from \"./RadarChart.vue?vue&type=script&lang=js\"\nexport * from \"./RadarChart.vue?vue&type=script&lang=js\"\n\nimport \"./RadarChart.vue?vue&type=style&index=0&id=073bb9ca&lang=scss\"\n\nimport exportComponent from \"../../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./index.vue?vue&type=template&id=f436f486\"\nimport script from \"./index.vue?vue&type=script&lang=js\"\nexport * from \"./index.vue?vue&type=script&lang=js\"\n\nimport \"./index.vue?vue&type=style&index=0&id=f436f486&lang=scss\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["class","_createBlock","_component_Layout","_createVNode","_component_PageHeader","title","$data","items","_createElementVNode","_component_BRow","_component_BCol","lg","_component_BCard","_component_BCardBody","_component_BCardTitle","_component_LineChart","_component_BarChart","_hoisted_1","_component_PieChart","_hoisted_2","_component_DonutChart","_hoisted_3","_component_PolarChart","_hoisted_4","_component_RadarChart","_component_Line","data","options","round","v","lim","l","h","Math","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","a","b","c","d","e","f","hex","h1","h2","eq","isShort","r","g","hexParse","str","ret","len","length","alpha","hexString","undefined","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","i","hueValue","rgb2hsl","range","calln","Array","isArray","map","hsl2rgb","hwb2rgb","hsv2rgb","hue","hueParse","m","exec","p1","p2","rotate","deg","hslString","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","unpack","unpacked","keys","Object","tkeys","j","ok","nk","replace","parseInt","names","nameParse","transparent","toLowerCase","RGB_RE","rgbParse","rgbString","to","pow","from","interpolate","rgb1","rgb2","t","modHSL","ratio","tmp","clone","proto","assign","fromObject","input","functionParse","charAt","Color","constructor","type","this","_rgb","_valid","valid","obj","mix","color","weight","c1","c2","w2","p","w1","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","noop","uid","id","isNullOrUndef","value","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","endsWith","parseFloat","toDimension","callback","fn","args","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","source","target","create","klen","isValidKey","key","indexOf","_merger","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","o","y","_splitKey","parts","split","part","push","_getKeyResolver","resolveObjectKey","resolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","item","has","_isClickEvent","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","roundedRange","niceRange","floor","fraction","niceFraction","_factorize","result","sqrt","sort","pop","isNumber","isNaN","almostWhole","rounded","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","_filterBetween","values","arrayEvents","listenArrayEvents","listener","_chartjs","listeners","defineProperty","configurable","enumerable","forEach","method","base","res","object","unlistenArrayEvents","stub","splice","_arrayUnique","set","Set","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","debounce","delay","timeout","clearTimeout","setTimeout","_toLeftRightCenter","align","_alignStartEnd","_textX","left","right","rtl","check","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","applyAnimationsDefaults","defaults","duration","easing","loop","describe","_fallback","_indexable","_scriptable","name","properties","active","animation","resize","show","animations","visible","hide","applyLayoutsDefaults","autoPadding","padding","top","bottom","intlCache","Map","getNumberFormat","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","formatNumber","num","format","formatters","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","applyScaleDefaults","display","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","override","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","local","appliers","toFontString","_measureText","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","setRenderOpts","opts","translation","fillStyle","textAlign","textBaseline","decorateText","line","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","resolve","inputs","info","cacheable","_addGrace","minmax","change","keepZero","add","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","proxy","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","_resolveWithContext","allKeys","scriptable","indexable","_allKeys","isScriptable","isIndexable","readKey","prefix","needsSubResolver","_resolveScriptable","_resolveArray","getValue","Error","join","delete","createSubResolver","arr","filter","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","pointsLen","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointAfter","monotoneCompute","valueAxis","pointBefore","iPixel","vPixel","splineCurveMonotone","slopeDelta","capControlPoint","pt","capBezierPoints","inArea","inAreaPrev","inAreaNext","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","getStyle","el","getPropertyValue","positions","getPositionedStyle","styles","suffix","pos","useOffsetPos","shadowRoot","getCanvasPosition","touches","offsetX","offsetY","box","getBoundingClientRect","clientX","clientY","getRelativePosition","event","borderBox","boxSizing","paddings","borders","getContainerSize","maxHeight","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","containerSize","maintainHeight","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRightToLeftAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","getLeftToRightAdapter","_itemWidth","getRtlAdapter","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","getSegment","segment","startBound","endBound","_boundSegment","prevValue","inside","subStart","startIsBefore","endIsBefore","shouldStart","shouldStop","_boundSegments","segments","sub","findStartAndEnd","solidSegments","cur","stop","_computeSegments","segmentOptions","_loop","splitByStyles","completeLoop","_fullLoop","doSplitByStyles","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","replacer","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","_getAnims","charts","complete","progress","listen","cb","reduce","acc","_duration","cancel","remove","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","rej","resolved","Animations","config","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","anim","all","scaleClip","allowedOverflow","defaultClip","toClip","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","convertObjectDataToArray","adata","isStacked","stacked","getStackKey","indexScale","valueScale","NEGATIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","itemStacks","_top","_bottom","visualValues","_visualValues","getFirstScaleId","shift","createDatasetContext","dataset","createDataContext","dataIndex","raw","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","static","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","addElements","isPluginEnabled","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","isExtensible","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","getAllScaleValues","_cache","$bar","visibleMetas","concat","computeMinSampleSize","curr","_length","updateMinAndPrev","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v2","setInflateAmount","inflateAmount","BarController","grouped","_index_","_value_","iAxisKey","vAxisKey","super","bars","getBasePixel","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","skipNull","_getStackCount","_getStackIndex","_startPixel","_endPixel","baseValue","minBarLength","floating","getDataVisibility","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","stackIndex","rects","getRatioAndOffset","circumference","cutout","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","DoughnutController","animateRotate","animateScale","spacing","legend","generateLabels","fontColor","legendItem","toggleDataVisibility","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","LineController","_dataset","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","PolarAreaController","angleLines","circular","pointLabels","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","PieController","RadarController","pointPosition","getPointPositionForValue","DateAdapterBase","members","init","formats","diff","startOf","endOf","adapters","_date","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getDistanceMetricForAxis","useX","useY","deltaX","deltaY","getIntersectItems","useFinalPosition","isPointInArea","evaluationFunc","inRange","getNearestRadialItems","getProps","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","pointInArea","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","getMargins","marginForPositions","fitBoxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","eventListenerOptions","addListener","removeListener","fromNativeEvent","native","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","ceil","majorStart","majorEnd","reverseAlign","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","caches","getTickMarkLength","getTitleHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","positionAxisID","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","defaultRoutes","routeDefaults","routes","propertyParts","sourceName","sourceScope","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","localIds","getOpts","pluginOpts","pluginScopeKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","idMatchesAxis","axisFromPosition","determineAxis","scaleOptions","getAxisFromDataset","retrieveAxisFromDatasets","boundDs","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","needContext","subResolver","resolverCache","hasFunction","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","getSizeForArea","field","getDatasetArea","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","eventFilter","_handleEvent","_getActiveElements","clipArc","pixelMargin","angleMargin","toRadiusCorners","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","drawArc","fullCircles","inner","lineJoin","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","fix","radiusOffset","setStyle","lineCap","getLineMethod","stepped","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","segmentMethod","usePath2D","LineElement","_points","_segments","_pointsUpdated","_interpolate","interpolated","inRange$1","hitRadius","PointElement","hoverRadius","mouseX","mouseY","inXRange","inYRange","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","maxR","enableBorder","boundingRects","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","inflateRect","amount","refRect","BarElement","addRectPath","tpoints","_findSegmentEnd","_getBounds","targetSegments","tgt","subBounds","fillSources","fillSource","_getEdge","_pointsFromSegments","boundary","linePoints","_createBoundaryLine","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","parseFillOption","decodeTargetIndex","firstCh","_getTargetPixel","_getTargetValue","fillOption","_buildStackLine","sourcePoints","linesBelow","getLinesBelow","addPointsBelow","below","unshift","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","simpleArc","getLineByIndex","computeBoundary","computeCircularBoundary","computeLinearBoundary","_drawfill","lineOpts","above","doFill","clipVertical","clipY","lineLoop","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","_args","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","textDirection","realX","fontLineHeight","calculateLegendItemHeight","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","calculateItemWidth","calculateItemHeight","legendItemText","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","plugin_title","WeakMap","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","defaultCallbacks","beforeTitle","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","addIfString","addedLabels","findOrAddLabel","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks$1","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","LinearScale","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","hLimits","vLimits","updateLimits","setCenterPoint","_pointLabelItems","buildPointLabelItems","createPointLabelItem","itemOpts","outerDistance","extra","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","isNotOverlapped","apexesInArea","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","pathRadiusLine","drawRadiusLine","gridLineOpts","createPointLabelContext","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","distanceFromCenter","getBasePosition","getPointLabelPosition","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","timestamp","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","CommonProps","required","default","datasetIdKey","updateMode","Props","compatProps","internals","attrs","toRawIfProxy","cloneProxy","setOptions","nextOptions","setLabels","currentData","nextLabels","setDatasets","nextDatasets","addedDatasets","nextDataset","currentDataset","find","cloneData","nextData","setup","param","expose","canvasRef","chartRef","renderChart","clonedData","proxiedData","destroyChart","param1","nextOptionsProxy","nextDataProxy","prevOptionsProxy","prevDataProxy","shouldUpdate","prevOptions","prevLabels","prevDatasets","deep","ref","createTypedChart","registerables","reforwardRef","Bar","Doughnut","Line","Pie","PolarArea","Radar","ChartJS","Filler","components","lineTension","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","__exports__","_component_Bar","_component_Pie","_component_Doughnut","_component_PolarArea","_component_Radar","href","Layout","PageHeader","LineChart","BarChart","PieChart","DonutChart","PolarChart","RadarChart"],"sourceRoot":""}